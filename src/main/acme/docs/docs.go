// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/appointments": {
            "post": {
                "description": "Create a new appointment with availability validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Create a new appointment",
                "parameters": [
                    {
                        "description": "Appointment data",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointments.CreateAppointmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/appointments.Appointment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/appointments/{id}/cancel": {
            "put": {
                "description": "Cancel an appointment with reason and audit trail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Cancel an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cancellation data",
                        "name": "cancellation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointments.CancelAppointmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/appointments/{id}/cancel-by-client": {
            "put": {
                "description": "Cancel an appointment from client side (chat/external)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Cancel appointment by client (for chat integration)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Client DNI and reason",
                        "name": "cancellation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/appointments/{id}/cancel-by-employee": {
            "put": {
                "description": "Cancel an appointment from employee/backend side",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointments"
                ],
                "summary": "Cancel appointment by employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee email and reason",
                        "name": "cancellation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "description": "Get a list of all clients",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get all clients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/iam.Client"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new client with RENIEC validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Create a new client",
                "parameters": [
                    {
                        "description": "Client data",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/iam.CreateClientRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/iam.Client"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Get a list of all employees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get all employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/employees.Employee"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "description": "Get employee details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employees.Employee"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/reniec/validate/{dni}": {
            "get": {
                "description": "Validate if a DNI exists in RENIEC before registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reniec"
                ],
                "summary": "Validate DNI with RENIEC (for chatbot)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DNI to validate",
                        "name": "dni",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/iam.ReniecValidationResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "description": "Get a list of all available services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get all services",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog.Service"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "appointments.Appointment": {
            "type": "object",
            "properties": {
                "appointment_date": {
                    "type": "string"
                },
                "attended_by": {
                    "type": "string"
                },
                "cancellation_reason": {
                    "type": "string"
                },
                "cancelled_by": {
                    "type": "string"
                },
                "cancelled_by_type": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "appointments.CancelAppointmentRequest": {
            "type": "object",
            "required": [
                "cancelled_by",
                "cancelled_by_type",
                "reason"
            ],
            "properties": {
                "cancelled_by": {
                    "type": "string"
                },
                "cancelled_by_type": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "appointments.CreateAppointmentRequest": {
            "type": "object",
            "required": [
                "appointment_date",
                "client_id",
                "service_id",
                "start_time"
            ],
            "properties": {
                "appointment_date": {
                    "type": "string"
                },
                "attended_by": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "catalog.Service": {
            "type": "object",
            "properties": {
                "benefits": {
                    "type": "string"
                },
                "contraindications": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "includes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "recommended_frequency": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "employees.Employee": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maternal_surname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "paternal_surname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "iam.Client": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dni": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "registration_date": {
                    "type": "string"
                },
                "reniec_validated": {
                    "type": "boolean"
                },
                "second_last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "iam.CreateClientRequest": {
            "type": "object",
            "required": [
                "dni",
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "dni": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "iam.ReniecResponse": {
            "type": "object",
            "properties": {
                "document_number": {
                    "type": "string"
                },
                "first_last_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "second_last_name": {
                    "type": "string"
                }
            }
        },
        "iam.ReniecValidationResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/iam.ReniecResponse"
                },
                "error": {
                    "type": "string"
                },
                "is_valid": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "ACME Backend API",
	Description:      "API REST para gestión de citas, catálogo de servicios y clientes con integración RENIEC",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
